// Generated by view binder compiler. Do not edit!
package com.yangchoi.module_tab.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.yangchoi.module_tab.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHomeArticleBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView itemAuthor;

  @NonNull
  public final TextView itemName;

  @NonNull
  public final TextView itemTime;

  private ItemHomeArticleBinding(@NonNull RelativeLayout rootView, @NonNull TextView itemAuthor,
      @NonNull TextView itemName, @NonNull TextView itemTime) {
    this.rootView = rootView;
    this.itemAuthor = itemAuthor;
    this.itemName = itemName;
    this.itemTime = itemTime;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHomeArticleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHomeArticleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_home_article, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHomeArticleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_author;
      TextView itemAuthor = rootView.findViewById(id);
      if (itemAuthor == null) {
        break missingId;
      }

      id = R.id.item_name;
      TextView itemName = rootView.findViewById(id);
      if (itemName == null) {
        break missingId;
      }

      id = R.id.item_time;
      TextView itemTime = rootView.findViewById(id);
      if (itemTime == null) {
        break missingId;
      }

      return new ItemHomeArticleBinding((RelativeLayout) rootView, itemAuthor, itemName, itemTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
