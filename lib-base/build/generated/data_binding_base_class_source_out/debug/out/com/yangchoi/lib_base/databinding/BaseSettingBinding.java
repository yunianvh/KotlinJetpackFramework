// Generated by view binder compiler. Do not edit!
package com.yangchoi.lib_base.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.yangchoi.lib_base.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BaseSettingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout baseSetting;

  @NonNull
  public final ImageView imgNext;

  @NonNull
  public final ImageView imgSettingIcon;

  @NonNull
  public final TextView tvRight;

  @NonNull
  public final TextView tvSetting;

  private BaseSettingBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout baseSetting,
      @NonNull ImageView imgNext, @NonNull ImageView imgSettingIcon, @NonNull TextView tvRight,
      @NonNull TextView tvSetting) {
    this.rootView = rootView;
    this.baseSetting = baseSetting;
    this.imgNext = imgNext;
    this.imgSettingIcon = imgSettingIcon;
    this.tvRight = tvRight;
    this.tvSetting = tvSetting;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BaseSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BaseSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.base_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BaseSettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout baseSetting = (LinearLayout) rootView;

      id = R.id.img_next;
      ImageView imgNext = rootView.findViewById(id);
      if (imgNext == null) {
        break missingId;
      }

      id = R.id.img_setting_icon;
      ImageView imgSettingIcon = rootView.findViewById(id);
      if (imgSettingIcon == null) {
        break missingId;
      }

      id = R.id.tv_right;
      TextView tvRight = rootView.findViewById(id);
      if (tvRight == null) {
        break missingId;
      }

      id = R.id.tv_setting;
      TextView tvSetting = rootView.findViewById(id);
      if (tvSetting == null) {
        break missingId;
      }

      return new BaseSettingBinding((LinearLayout) rootView, baseSetting, imgNext, imgSettingIcon,
          tvRight, tvSetting);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
